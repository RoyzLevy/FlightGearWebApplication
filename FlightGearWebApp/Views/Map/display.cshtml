
@{
    ViewBag.Title = "display";
}
<html>
<body background="~/Resources/export-map-share.png" style="background-repeat:no-repeat; background-size:cover; padding:0; margin:0" id="bgImg">
    <canvas id="myCanvas" style="border:0.5px solid black"></></canvas>
</body>
</html>



<script>
    var img = document.getElementById('bgImg');
    img.width = window.innerWidth;
    img.height = window.innerHeight;
    var NetworkLon = 0;
    var NetworkLat = 0;
    var ModelLon = 0;
    var ModelLat = 0;
    var normalizedLon = 0;
    var normalizedLat = 0;

    var cnvs = document.getElementById("myCanvas");

    cnvs.style.position = "absolute";
    cnvs.setAttribute('width', img.clientWidth);
    cnvs.setAttribute('height', window.innerHeight - 26);

    var ctx = cnvs.getContext("2d");

    var preLon = 0;
    var preLat = 0;
    var firstTime = "1";

    disconnect = (function () {
        alert("about to disconnect");
        $.post("@Url.Action("Disconnect")").done();
        alert("done!");
    });

    singleDraw = (function () {
        /////////////////////
        //Drawing the line coming out of the point
        if (firstTime == "0") {
            ctx.strokeStyle = "red";
            ctx.lineWidth = 1;
            ctx.moveTo(preLon, preLat);
            ctx.lineTo(normalizedLon, normalizedLat);
            ctx.stroke();
        }
        //Only draw location-point first time
        else {
            ctx.beginPath();
            ctx.arc(normalizedLon, normalizedLat, 2, 0, 100 * Math.PI, false);
            ctx.lineWidth = 6;
            ctx.strokeStyle = 'blue';
            ctx.stroke();
            ctx.fillStyle = "red";
            ctx.fill();
        }
        //Updates for next time for drawing line
        preLon = normalizedLon;
        preLat = normalizedLat;
        firstTime = "0";
    });

    //Detect about to leave page or refresh thus disconnect//

    ////Refresh Segment//

    //window.onunload = function (e) {
    //    // Firefox || IE
    //    e = e || window.event;

    //    var y = e.pageY || e.clientY;

    //    if (y < 0) alert("Window closed");
    //    else alert("Window refreshed");

    //}

    ///////////////////////////////////////////////////////////

    var isNetworkDisplay = @Session["isNetworkDisplay"];
    if (isNetworkDisplay == "1") {
        alert("NETWORK!");

        var IntervalTime = @Session["time"] * 1000;

        drawPlanePath = (function () {
            alert("in drawPlanPath");

            $.post("@Url.Action("GetNetworkXML")").done(function (xml) {
                alert("Hello!");
                var xmlDoc = $.parseXML(xml),
                $xml = $(xmlDoc),
                NetworkLat = $xml.find("Lat").text();
                NetworkLon = $xml.find("Lon").text();
                $("#networkLat").text(NetworkLat);
                $("#networkLon").text(NetworkLon);
                normalizedLon = ((parseFloat(NetworkLon) + 180) * (cnvs.width) / 360.0);
                normalizedLat = ((parseFloat(NetworkLat) + 90) * (cnvs.height) / 180.0);
                alert("lon : " + normalizedLon);
                alert("lat : " + normalizedLat);

                //normalizedLon = Math.floor(Math.random() * 100);
                //normalizedLat = Math.floor(Math.random() * 100);
                singleDraw();
                if (IntervalTime == 0) {
                    disconnect();
                }
            });
        });
        if (IntervalTime == 0) {         //one time show upon not entering time.
            alert("interval = 0");
            drawPlanePath();
        }
        else {                              //time-based show once every IntervalTime
            setInterval(drawPlanePath, IntervalTime);
            alert("interval != 0");
            drawPlanePath();
        }
    }
    else {
        alert("FROM FILE!"); //assuming time was provided
        var IntervalTime = @Session["time"] * 1000;
        var isFileEnd = "0";
        function drawPlanePathFile() {
            //isFileEnd = 0;  //this does not go through?
            if (isFileEnd === "1") {
                alert("File End");
                clearInterval(functionIntervalId);
            }
            else {
            $.post("@Url.Action("GetInfoModelXML")").done(function (xml) {
                var xmlDoc = $.parseXML(xml),
                    $xml = $(xmlDoc),
                    ModelLat = $xml.find("Lat").text();
                ModelLon = $xml.find("Lon").text();
                isFileEnd = $xml.find("isEOF").text();
                alert("Lon is" + ModelLon);
                alert("Instantly after: " + isFileEnd);
                $("#Lat").text(ModelLat);
                $("#Lon").text(ModelLon);
                normalizedLon = ((parseFloat(ModelLon) + 180) * (cnvs.width) / 360.0);
                normalizedLat = ((parseFloat(ModelLat) + 90) * (cnvs.height) / 180.0);
                alert("lon : " + normalizedLon);
                alert("lat : " + normalizedLat);
                singleDraw();
            });
        }
        }
        var functionIntervalId = setInterval(drawPlanePathFile, IntervalTime);
        drawPlanePathFile();
    }
</script>

