
@{
    ViewBag.Title = "draw";
}


<html>
<body background="~/Resources/export-map-share.png" style="background-repeat:no-repeat; background-size:cover; padding:0; margin:0" id="bgImg">
    <canvas id="myCanvas" style="border:0.5px solid black;z-index:2;position:absolute"></></canvas>
    <canvas id="myLineCanvas" style="border:0.5px solid black;z-index:1"></></canvas>
</body>
</html>

<script>


    //Disable zoom section///

    $(document).keydown(function (event) {
        if (event.ctrlKey == true && (event.which == '61' || event.which == '107' || event.which == '173' || event.which == '109' || event.which == '187' || event.which == '189')) {
            event.preventDefault();
        }
        // 107 Num Key  +
        // 109 Num Key  -
        // 173 Min Key  hyphen/underscor Hey
        // 61 Plus key  +/= key
    });

    $(window).bind('mousewheel DOMMouseScroll', function (event) {
        if (event.ctrlKey == true) {
            event.preventDefault();
        }
    });


    ////////////////////////

    //Find out if user is leaving or refreshing////check for Navigation Timing API support
    
    ////


    var img = document.getElementById('bgImg');
    var NetworkLon = 0;
    var NetworkLat = 0;
    var normalizedLon = 0;
    var normalizedLat = 0;

    var cnvs = document.getElementById("myCanvas");
    var linecnvs = document.getElementById("myLineCanvas");

    

    //cnvs.style.position = "absolute";
    cnvs.setAttribute('width', img.clientWidth);
    cnvs.setAttribute('height', (Window.innerHeight));
    //cnvs.setAttribute('width', 2000);
    //cnvs.setAttribute('height', 2000);

    //cnvs.width = window.innerWidth;
    //cnvs.height = window.innerHeight;

    
    //linecnvs.style.position = "absolute";
    linecnvs.setAttribute('width', img.clientWidth);
    linecnvs.setAttribute('height', Window.innerHeight);
    //cnvs.style.left = img.offsetLeft + "px";
    //cnvs.style.top = img.offsetTop + "px";

    var ctx = cnvs.getContext("2d");
    var ctl = linecnvs.getContext("2d");

    var preLon = 0;
    var preLat = 0;
    //var randLon = Math.floor(Math.random() * 100);
    //var randLat = Math.floor(Math.random() * 100);
    var firstTime = "1";

    disconnect = (function () {
        alert("about to disconnect");
        $.post("@Url.Action("disconnect")");
    });

    //Refresh Segment//

    window.onunload = function (e) {
        // Firefox || IE
        e = e || window.event;

        var y = e.pageY || e.clientY;

        if (y < 0) alert("Window closed");
        else alert("Window refreshed");

    }
    //////////////////////////
    drawPlanePath = (function () {
        //Drawing the dot
        ctx.beginPath();

        //alert("in draw normalized Lat: " + normalizedLat);
        //alert("in draw normalized Lon: " + normalizedLon);

        ctx.clearRect(0, 0, cnvs.width, cnvs.height);
        ctx.arc(normalizedLon, normalizedLat, 2, 0, 2 * Math.PI, false);
        ctx.lineWidth = 3;
        ctx.strokeStyle = 'blue';
        ctx.stroke();
        ctx.fillStyle = "red";
        ctx.fill();
        /////////////////////
        //Drawing the line right behind the dot
        if (firstTime == "0") {
            ctl.strokeStyle = "red";
            ctl.lineWidth = 2;
            ctl.moveTo(preLon, preLat);
            ctl.lineTo(normalizedLon, normalizedLat);
            ctl.stroke();
        }
        //////////////////////
        //Updates for next time
        preLon = normalizedLon;
        preLat = normalizedLat;
        firstTime = "0";
        //randLon = Math.floor(Math.random() * 100);
        //randLat = Math.floor(Math.random() * 100);
        ///////////////////////
    });
        var IntervalTime = @Session["time"] * 1000
        getPlanePath = (function () {
            $.post("@Url.Action("GetNetwork")").done(function (xml) {
                var xmlDoc = $.parseXML(xml),
                $xml = $(xmlDoc),
                NetworkLat = parseFloat($xml.find("Lat").text());
                NetworkLon = parseFloat($xml.find("Lon").text());
                $("#networkLat").text(NetworkLat);
                $("#networkLon").text(NetworkLon);
                //alert(NetworkLat + " lat from FG");
                //alert(NetworkLon + " lon from FG");
                normalizedLon = ((parseFloat(NetworkLon) + 180) * (cnvs.width) / 360.0);
                normalizedLat = ((parseFloat(NetworkLat) + 90) * (cnvs.height) / 180.0);
                //alert("From FG normalized Lat: " + normalizedLat);
                //alert("From FG normalized Lon: " + normalizedLon);
                drawPlanePath();
            });
        });
    setInterval(getPlanePath, IntervalTime);
    getPlanePath();

</script>
